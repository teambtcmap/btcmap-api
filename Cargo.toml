[package]
name = "btcmap-api"
version = "0.1.0"
edition = "2021"

# In case we need to maximize runtime performance
# [profile.release]
# codegen-units = 1
# lto = "fat"
# opt-level = 3
# panic = "abort"

[dependencies]

# This is the main dependency, providing a webserver and core infra
# https://github.com/actix/actix-web/blob/master/actix-web/CHANGES.md
actix-web = { version = "4.9.0", default-features = false, features = ["macros", "compress-brotli"] }

# Actix middleware needs that
# https://github.com/rust-lang/futures-rs/releases
futures-util = { version = "0.3.31", default-features = false }

# We're using SQLite because it's portable and it requires no maintenance
# SQLite is fast enough for our needs and we aren't aiming for infinite scalability
# https://github.com/rusqlite/rusqlite/releases
rusqlite = { version = "0.32.1", default-features = false, features = ["bundled", "time", "serde_json"] }

# That's an industry standard for making HTTP requests
# https://github.com/seanmonstar/reqwest/releases
reqwest = { version = "0.12.11", default-features = false, features = ["rustls-tls", "json"] }

# Used for mapping Rust structs to JSON via derive annotation
# https://github.com/serde-rs/serde/releases
serde = { version = "1.0.217", default-features = false, features = ["derive"] }

# JSON is heavily used in this project
# https://github.com/serde-rs/json/releases
serde_json = { version = "1.0.138", default-features = false, features = ["preserve_order"] }

# That's an industry starnard for working with time
# TODO consider switching to std alternatives, if/when present
# https://github.com/time-rs/time/blob/main/CHANGELOG.md
time = { version = "0.3.36", default-features = false, features = ["macros", "serde-well-known"] }

# Async logging infra
# https://github.com/tokio-rs/tracing/releases
tracing = { version = "0.1.41", default-features = false }

# Async logging infra
# https://github.com/tokio-rs/tracing/releases
tracing-subscriber = { version = "0.3.19", default-features = false, features = ["json", "env-filter", "fmt"] }

# Used to embed database migrations
# https://github.com/Michael-F-Bryan/include_dir/tags
include_dir = { version = "0.7.4", default-features = false }

# Used for dealing with area bounds
# https://github.com/georust/geojson/tags
geojson = { version = "0.24.1", default-features = false, features = ["geo-types"] }

# Used for dealing with area bounds
# https://github.com/georust/geo/blob/main/geo/CHANGES.md
geo = { version = "0.29.3", default-features = false }

# We're wrapping blocking SQLite connections into an async pool
# https://github.com/bikeshedder/deadpool/blob/master/sqlite/CHANGELOG.md
deadpool-sqlite = { version = "0.9.0", default-features = false, features = ["rt_tokio_1"] }

# Used to handle area icons
# https://crates.io/crates/base64
base64 = { version = "0.22.1", default-features = false }

# Used to generate OpenGraph images
# https://docs.rs/staticmap/latest/staticmap/
staticmap = { version = "0.4.2", default-features = false }

# Used to extract tip addresses from OSM profiles
# https://github.com/rust-lang/regex/blob/master/CHANGELOG.md
regex = { version = "1.11.1", default-features = false }

url = { version = "2.5.4", default-features = false }

argon2 = { version = "0.5.3", default-features = false, features = ["password-hash", "alloc"] }

uuid = { version = "1.16.0", default-features = false, features = ["v4"] }

strum = { version = "0.27.1", features = ["derive"] }